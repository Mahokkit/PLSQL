SQL> set echo on
SQL> set serveroutput on
SQL> @scripts/9_2.sql
SQL> -- 9_2 Set up
SQL> DROP TABLE f_emps;

Table dropped.

SQL> CREATE TABLE f_emps
  2  AS SELECT employee_id, last_name, salary, department_id
  3  FROM employees;

Table created.

SQL> 
SQL> DROP TABLE f_depts;

Table dropped.

SQL> CREATE TABLE f_depts
  2  AS SELECT department_id, department_name
  3  FROM departments;

Table created.

SQL> @scripts/9_2_134.sql
SQL> -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
  2  	     (
  3  	     p_salary f_emps.salary%TYPE,
  4  	     p_percent_incr NUMBER
  5  	     )
  6  	     RETURN NUMBER
  7  	     IS
  8  BEGIN
  9  	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
 10  END;
 11  /

Function created.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> / */
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
  2  FROM f_emps;

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
King                           27783               29172.15                     
Kochhar                        17000                  17850                     
De Haan                        17000                  17850                     
Whalen                          4400                   4620                     
Higgins                        12000                  12600                     
Gietz                           8300                   8715                     
Zlotkey                        10500                  11025                     
Abel                           11000                  11550                     
Taylor                          8600                   9030                     
Grant                           7000                   7350                     
Mourgos                         5800                   6090                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Rajs                            3500                   3675                     
Davies                          3100                   3255                     
Matos                           2600                   2730                     
Vargas                          2500                   2625                     
Hunold                          9000                   9450                     
Ernst                           6000                   6300                     
Lorentz                         4200                   4410                     
Hartstein                      13000                  13650                     
Fay                             3900                   4095                     
Barbosa Souza                   9500                   9975                     
Silva Pinto                     7500                   7875                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Alves Rocha                     7300                   7665                     
Almeida Castro                  7300                   7665                     
Hooper                          9600                  10080                     
Steiner                         8600                   9030                     
Bell                            3500                   3675                     
TAYLOR                          4000                   4200                     
Stocks                          3700                   3885                     
Heiden                          2600                   2730                     
Li                              8000                   8400                     
Fontaine                        7800                   8190                     
Reinhard                        8100                   8505                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Hernandez                       4300                   4515                     
Ricci                           4100                   4305                     
Saikawa                         4400                   4620                     
Safwah                          5000                   5250                     
Duric                           5400                   5670                     
Loermans                        5200                   5460                     
Newton                          4900                   5145                     

40 rows selected.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> /
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps;*/
SQL> -- Second Select SQL without Function
SQL> SELECT last_name, salary, (salary + (salary * 0.05))
  2  FROM f_emps WHERE ((salary + (salary * 0.05)) > 10000);

LAST_NAME                     SALARY (SALARY+(SALARY*0.05))                     
------------------------- ---------- ----------------------                     
King                           27783               29172.15                     
Kochhar                        17000                  17850                     
De Haan                        17000                  17850                     
Higgins                        12000                  12600                     
Zlotkey                        10500                  11025                     
Abel                           11000                  11550                     
Hartstein                      13000                  13650                     
Hooper                          9600                  10080                     

8 rows selected.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> /
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps;
SQL> -- Second Select SQL without Function
SQL> SELECT last_name, salary, (salary + (salary * 0.05))
SQL> FROM f_emps WHERE ((salary + (salary * 0.05)) > 10000);*/
SQL> -- Second Select SQL with Function
SQL> SELECT last_name, salary, sal_increase(salary, 5)
  2  FROM f_emps WHERE sal_increase(salary, 5) > 10000;

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
King                           27783               29172.15                     
Kochhar                        17000                  17850                     
De Haan                        17000                  17850                     
Higgins                        12000                  12600                     
Zlotkey                        10500                  11025                     
Abel                           11000                  11550                     
Hartstein                      13000                  13650                     
Hooper                          9600                  10080                     

8 rows selected.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> /
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps;
SQL> -- Second Select SQL without Function
SQL> SELECT last_name, salary, (salary + (salary * 0.05))
SQL> FROM f_emps WHERE ((salary + (salary * 0.05)) > 10000);
SQL> -- Second Select SQL with Function
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps WHERE sal_increase(salary, 5) > 10000;
SQL> */
SQL> -- Question 3
SQL> SELECT last_name, salary, sal_increase(salary, 5)
  2  FROM f_emps
  3  ORDER BY sal_increase(salary, 5) DESC;

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
King                           27783               29172.15                     
Kochhar                        17000                  17850                     
De Haan                        17000                  17850                     
Hartstein                      13000                  13650                     
Higgins                        12000                  12600                     
Abel                           11000                  11550                     
Zlotkey                        10500                  11025                     
Hooper                          9600                  10080                     
Barbosa Souza                   9500                   9975                     
Hunold                          9000                   9450                     
Taylor                          8600                   9030                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Steiner                         8600                   9030                     
Gietz                           8300                   8715                     
Reinhard                        8100                   8505                     
Li                              8000                   8400                     
Fontaine                        7800                   8190                     
Silva Pinto                     7500                   7875                     
Alves Rocha                     7300                   7665                     
Almeida Castro                  7300                   7665                     
Grant                           7000                   7350                     
Ernst                           6000                   6300                     
Mourgos                         5800                   6090                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Duric                           5400                   5670                     
Loermans                        5200                   5460                     
Safwah                          5000                   5250                     
Newton                          4900                   5145                     
Whalen                          4400                   4620                     
Saikawa                         4400                   4620                     
Hernandez                       4300                   4515                     
Lorentz                         4200                   4410                     
Ricci                           4100                   4305                     
TAYLOR                          4000                   4200                     
Fay                             3900                   4095                     

LAST_NAME                     SALARY SAL_INCREASE(SALARY,5)                     
------------------------- ---------- ----------------------                     
Stocks                          3700                   3885                     
Rajs                            3500                   3675                     
Bell                            3500                   3675                     
Davies                          3100                   3255                     
Heiden                          2600                   2730                     
Matos                           2600                   2730                     
Vargas                          2500                   2625                     

40 rows selected.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> /
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps;
SQL> -- Second Select SQL without Function
SQL> SELECT last_name, salary, (salary + (salary * 0.05))
SQL> FROM f_emps WHERE ((salary + (salary * 0.05)) > 10000);
SQL> -- Second Select SQL with Function
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps WHERE sal_increase(salary, 5) > 10000;
SQL> 
SQL> -- Question 3
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps
SQL> ORDER BY sal_increase(salary, 5) DESC;
SQL> */
SQL> -- Question 4
SQL> SELECT department_id, SUM(salary)
  2  FROM f_emps
  3  GROUP BY department_id
  4  HAVING SUM(salary) > 20000;

DEPARTMENT_ID SUM(SALARY)                                                       
------------- -----------                                                       
           90       61783                                                       
           20       43100                                                       
           85       31600                                                       
          110       39000                                                       
           80       39700                                                       
           50       23600                                                       
           60       35000                                                       

7 rows selected.

SQL> @scripts/9_2_134.sql
SQL> /* -- 1
SQL> CREATE OR REPLACE FUNCTION sal_increase
SQL> 	     (
SQL> 	     p_salary f_emps.salary%TYPE,
SQL> 	     p_percent_incr NUMBER
SQL> 	     )
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> BEGIN
SQL> 	     RETURN (p_salary + (p_salary * p_percent_incr / 100));
SQL> END;
SQL> /
SQL> -- First Select SQL
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps;
SQL> -- Second Select SQL without Function
SQL> SELECT last_name, salary, (salary + (salary * 0.05))
SQL> FROM f_emps WHERE ((salary + (salary * 0.05)) > 10000);
SQL> -- Second Select SQL with Function
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps WHERE sal_increase(salary, 5) > 10000;
SQL> 
SQL> -- Question 3
SQL> SELECT last_name, salary, sal_increase(salary, 5)
SQL> FROM f_emps
SQL> ORDER BY sal_increase(salary, 5) DESC;
SQL> 
SQL> -- Question 4
SQL> SELECT department_id, SUM(salary)
SQL> FROM f_emps
SQL> GROUP BY department_id
SQL> HAVING SUM(salary) > 20000;
SQL> */
SQL> -- Question 4 using function
SQL> SELECT department_id, SUM(sal_increase(salary, 5))
  2  FROM f_emps
  3  GROUP BY department_id
  4  HAVING SUM(sal_increase(salary, 5)) > 20000;

DEPARTMENT_ID SUM(SAL_INCREASE(SALARY,5))                                       
------------- ---------------------------                                       
           90                    64872.15                                       
           20                       45255                                       
           85                       33180                                       
          110                       40950                                       
           80                       41685                                       
           50                       24780                                       
           60                       36750                                       

7 rows selected.

SQL> @scripts/9_2_5.sql
SQL> -- Question 5
SQL> CREATE OR REPLACE FUNCTION check_dept
  2  	     (p_dept_id f_depts.department_id%TYPE)
  3  	     RETURN BOOLEAN IS
  4  	     v_dept_id f_depts.department_id%TYPE;
  5  BEGIN
  6  	     SELECT department_id INTO v_dept_id
  7  	     FROM f_depts
  8  	     WHERE department_id = p_dept_id;
  9  		     RETURN TRUE;
 10  EXCEPTION
 11  	     WHEN NO_DATA_FOUND THEN
 12  	     RETURN FALSE;
 13  END;
 14  /

Function created.

SQL> @scripts/9_2_5.sql
SQL> /* -- Question 5
SQL> CREATE OR REPLACE FUNCTION check_dept
SQL> 	     (p_dept_id f_depts.department_id%TYPE)
SQL> 	     RETURN BOOLEAN IS
SQL> 	     v_dept_id f_depts.department_id%TYPE;
SQL> BEGIN
SQL> 	     SELECT department_id INTO v_dept_id
SQL> 	     FROM f_depts
SQL> 	     WHERE department_id = p_dept_id;
SQL> 		     RETURN TRUE;
SQL> EXCEPTION
SQL> 	     WHEN NO_DATA_FOUND THEN
SQL> 	     RETURN FALSE;
SQL> END;
SQL> / */
SQL> -- Trying Function...with SELECT statement
SQL> SELECT check_dept(5) FROM f_depts;
SELECT check_dept(5) FROM f_depts
       *
ERROR at line 1:
ORA-06552: PL/SQL: Statement ignored 
ORA-06553: PLS-382: expression is of wrong type 


SQL> @scripts/9_2_67.sql
SQL> -- Question 6
SQL> CREATE OR REPLACE PROCEDURE insert_emp
  2  (
  3  	     p_employee_id IN f_emps.employee_id%TYPE,
  4  	     p_last_name IN f_emps.last_name%TYPE,
  5  	     p_salary IN f_emps.salary%TYPE,
  6  	     p_dept_id IN f_emps.department_id%TYPE
  7  ) IS
  8  BEGIN
  9  	     IF check_dept(p_dept_id) = TRUE THEN
 10  		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
 11  	     ELSE
 12  		     DBMS_OUTPUT.PUT_LINE('Department ID: '||p_dept_id||' does not exist!');
 13  	     END IF;
 14  END insert_emp;
 15  /

Procedure created.

SQL> @scripts/9_2_67.sql
SQL> /* -- Question 6
SQL> CREATE OR REPLACE PROCEDURE insert_emp
SQL> (
SQL> 	     p_employee_id IN f_emps.employee_id%TYPE,
SQL> 	     p_last_name IN f_emps.last_name%TYPE,
SQL> 	     p_salary IN f_emps.salary%TYPE,
SQL> 	     p_dept_id IN f_emps.department_id%TYPE
SQL> ) IS
SQL> BEGIN
SQL> 	     IF check_dept(p_dept_id) = TRUE THEN
SQL> 		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
SQL> 	     ELSE
SQL> 		     DBMS_OUTPUT.PUT_LINE('Department ID: '||p_dept_id||' does not exist!');
SQL> 	     END IF;
SQL> END insert_emp;
SQL> / */
SQL> -- Question 7
SQL> BEGIN
  2  	     insert_emp(800, 'Jokinen', 5000, 750);
  3  END;
  4  /
Department ID: 750 does not exist!                                              

PL/SQL procedure successfully completed.

SQL> @scripts/9_2_89.sql
SQL> -- Question 8
SQL> /* -- modified procedure*/
SQL> CREATE OR REPLACE PROCEDURE insert_emp
  2  (
  3  	     p_employee_id IN f_emps.employee_id%TYPE,
  4  	     p_last_name IN f_emps.last_name%TYPE,
  5  	     p_salary IN f_emps.salary%TYPE,
  6  	     p_dept_id IN f_emps.department_id%TYPE
  7  ) IS
  8  BEGIN
  9  	     IF check_dept(p_dept_id) = TRUE THEN
 10  		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
 11  	     ELSE
 12  		     INSERT INTO f_depts VALUES (p_dept_id, 'TEMPORARY');
 13  		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
 14  	     END IF;
 15  END insert_emp;
 16  /

Procedure created.

SQL> @scripts/9_2_89.sql
SQL> -- Question 8
SQL> /* -- modified procedure
SQL> CREATE OR REPLACE PROCEDURE insert_emp
SQL> (
SQL> 	     p_employee_id IN f_emps.employee_id%TYPE,
SQL> 	     p_last_name IN f_emps.last_name%TYPE,
SQL> 	     p_salary IN f_emps.salary%TYPE,
SQL> 	     p_dept_id IN f_emps.department_id%TYPE
SQL> ) IS
SQL> BEGIN
SQL> 	     IF check_dept(p_dept_id) = TRUE THEN
SQL> 		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
SQL> 	     ELSE
SQL> 		     INSERT INTO f_depts VALUES (p_dept_id, 'TEMPORARY');
SQL> 		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
SQL> 	     END IF;
SQL> END insert_emp;
SQL> / */
SQL> -- Question 8running procedure
SQL> BEGIN
  2  	     insert_emp(800, 'Jokinen', 5000, 750);
  3  END;
  4  /

PL/SQL procedure successfully completed.

SQL> @scripts/9_2_89.sql
SQL> -- Question 8
SQL> /* -- modified procedure
SQL> CREATE OR REPLACE PROCEDURE insert_emp
SQL> (
SQL> 	     p_employee_id IN f_emps.employee_id%TYPE,
SQL> 	     p_last_name IN f_emps.last_name%TYPE,
SQL> 	     p_salary IN f_emps.salary%TYPE,
SQL> 	     p_dept_id IN f_emps.department_id%TYPE
SQL> ) IS
SQL> BEGIN
SQL> 	     IF check_dept(p_dept_id) = TRUE THEN
SQL> 		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
SQL> 	     ELSE
SQL> 		     INSERT INTO f_depts VALUES (p_dept_id, 'TEMPORARY');
SQL> 		     INSERT INTO f_emps VALUES (p_employee_id, p_last_name, p_salary, p_dept_id);
SQL> 	     END IF;
SQL> END insert_emp;
SQL> /
SQL> -- Question 8running procedure
SQL> BEGIN
SQL> 	     insert_emp(800, 'Jokinen', 5000, 750);
SQL> END;
SQL> / */
SQL> -- Question 9 - Inner Join does the same thing!
SQL> SELECT f_emps.employee_id, f_emps.last_name, f_emps.salary, f_emps.department_id, f_depts.department_name
  2  FROM f_emps
  3  INNER JOIN f_depts ON f_emps.department_id = f_depts.department_id;

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        100 King                           27783            90                  
Executive                                                                       
                                                                                
        101 Kochhar                        17000            90                  
Executive                                                                       
                                                                                
        102 De Haan                        17000            90                  
Executive                                                                       
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        200 Whalen                          4400            10                  
Administration                                                                  
                                                                                
        205 Higgins                        12000           110                  
Accounting                                                                      
                                                                                
        206 Gietz                           8300           110                  
Accounting                                                                      
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        149 Zlotkey                        10500            80                  
Sales - Europe                                                                  
                                                                                
        174 Abel                           11000            80                  
Sales - Europe                                                                  
                                                                                
        176 Taylor                          8600            80                  
Sales - Europe                                                                  
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        124 Mourgos                         5800            50                  
Shipping                                                                        
                                                                                
        141 Rajs                            3500            50                  
Shipping                                                                        
                                                                                
        142 Davies                          3100            50                  
Shipping                                                                        
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        143 Matos                           2600            50                  
Shipping                                                                        
                                                                                
        144 Vargas                          2500            50                  
Shipping                                                                        
                                                                                
        103 Hunold                          9000            60                  
IT                                                                              
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        104 Ernst                           6000            60                  
IT                                                                              
                                                                                
        107 Lorentz                         4200            60                  
IT                                                                              
                                                                                
        201 Hartstein                      13000            20                  
Marketing                                                                       
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        202 Fay                             3900            20                  
Marketing                                                                       
                                                                                
        207 Barbosa Souza                   9500            85                  
Sales - Americas                                                                
                                                                                
        208 Silva Pinto                     7500            85                  
Sales - Americas                                                                
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        209 Alves Rocha                     7300            85                  
Sales - Americas                                                                
                                                                                
        210 Almeida Castro                  7300            85                  
Sales - Americas                                                                
                                                                                
        212 Hooper                          9600            80                  
Sales - Europe                                                                  
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        215 Steiner                         8600            20                  
Marketing                                                                       
                                                                                
        216 Bell                            3500            50                  
Shipping                                                                        
                                                                                
        217 TAYLOR                          4000            20                  
Marketing                                                                       
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        219 Stocks                          3700            20                  
Marketing                                                                       
                                                                                
        220 Heiden                          2600            50                  
Shipping                                                                        
                                                                                
        222 Li                              8000            60                  
IT                                                                              
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        223 Fontaine                        7800            60                  
IT                                                                              
                                                                                
        224 Reinhard                        8100           110                  
Accounting                                                                      
                                                                                
        225 Hernandez                       4300            10                  
Administration                                                                  
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        226 Ricci                           4100            10                  
Administration                                                                  
                                                                                
        227 Saikawa                         4400            10                  
Administration                                                                  
                                                                                
        228 Safwah                          5000            20                  
Marketing                                                                       
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        231 Duric                           5400           110                  
Accounting                                                                      
                                                                                
        232 Loermans                        5200           110                  
Accounting                                                                      
                                                                                
        235 Newton                          4900            20                  
Marketing                                                                       
                                                                                

EMPLOYEE_ID LAST_NAME                     SALARY DEPARTMENT_ID                  
----------- ------------------------- ---------- -------------                  
DEPARTMENT_NAME                                                                 
------------------------------                                                  
        800 Jokinen                         5000           750                  
TEMPORARY                                                                       
                                                                                

40 rows selected.

SQL> @scripts/9_2_10.sql
SQL> /* -- Question 10 */
SQL> CREATE OR REPLACE FUNCTION get_sal
  2  	     (p_emp_id f_emps.employee_id%TYPE)
  3  	     RETURN NUMBER
  4  	     IS
  5  	     v_salary f_emps.salary%TYPE;
  6  BEGIN
  7  	     SELECT salary INTO v_salary
  8  	     FROM f_emps
  9  	     WHERE employee_id = p_emp_id;
 10  	     RETURN v_salary;
 11  END;
 12  /

Function created.

SQL> @scripts/9_2_10.sql
SQL> /* -- Question 10
SQL> CREATE OR REPLACE FUNCTION get_sal
SQL> 	     (p_emp_id f_emps.employee_id%TYPE)
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> 	     v_salary f_emps.salary%TYPE;
SQL> BEGIN
SQL> 	     SELECT salary INTO v_salary
SQL> 	     FROM f_emps
SQL> 	     WHERE employee_id = p_emp_id;
SQL> 	     RETURN v_salary;
SQL> END;
SQL> / */
SQL> -- Trying function with Update
SQL> UPDATE f_emps
  2  SET department_id = 50
  3  WHERE get_sal(employee_id) > 10000;
WHERE get_sal(employee_id) > 10000
      *
ERROR at line 3:
ORA-04091: table DATADEV.F_EMPS is mutating, trigger/function may not see it 
ORA-06512: at "DATADEV.GET_SAL", line 7 


SQL> @scripts/9_2_11.sql
SQL> /* -- Question 11 */
SQL> CREATE OR REPLACE FUNCTION upd_sal
  2  	     (p_emp_id f_emps.employee_id%TYPE)
  3  	     RETURN NUMBER
  4  	     IS
  5  	     v_salary f_emps.salary%TYPE;
  6  BEGIN
  7  	     SELECT salary INTO v_salary
  8  	     FROM f_emps
  9  	     WHERE employee_id = p_emp_id;
 10  
 11  	     v_salary := v_salary * 2;
 12  
 13  	     UPDATE f_emps
 14  	     SET salary = v_salary
 15  	     WHERE employee_id = p_emp_id;
 16  
 17  	     RETURN v_salary;
 18  END;
 19  /

Function created.

SQL> @scripts/9_2_11.sql
SQL> /* -- Question 11
SQL> CREATE OR REPLACE FUNCTION upd_sal
SQL> 	     (p_emp_id f_emps.employee_id%TYPE)
SQL> 	     RETURN NUMBER
SQL> 	     IS
SQL> 	     v_salary f_emps.salary%TYPE;
SQL> BEGIN
SQL> 	     SELECT salary INTO v_salary
SQL> 	     FROM f_emps
SQL> 	     WHERE employee_id = p_emp_id;
SQL> 
SQL> 	     v_salary := v_salary * 2;
SQL> 
SQL> 	     UPDATE f_emps
SQL> 	     SET salary = v_salary
SQL> 	     WHERE employee_id = p_emp_id;
SQL> 
SQL> 	     RETURN v_salary;
SQL> END;
SQL> / */
SQL> -- Trying Function...
SQL> SELECT employee_id, last_name, salary, upd_sal(employee_id)
  2  FROM f_emps
  3  WHERE employee_id = 100;
SELECT employee_id, last_name, salary, upd_sal(employee_id)
                                       *
ERROR at line 1:
ORA-14551: cannot perform a DML operation inside a query  
ORA-06512: at "DATADEV.UPD_SAL", line 13 


SQL> spool off
